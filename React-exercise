Objective: Create a generic function that reverses an array. The function should work with any type of data.

Details:

The function should be named reverseArray.
It should be generic, capable of handling arrays of any type.
The function should return a new array with elements in reverse order.























Create a new file called store.js to set up the Redux store:
import { createStore } from 'redux';
import rootReducer from './reducers';

const store = createStore(rootReducer);

export default store;

In this example, we're using the createStore function from the redux library to create a new Redux store, 
and passing the rootReducer function as an argument. We're exporting the store so that we can use it in our React components.

Create a new file called reducers.js to define the Redux reducers:

const initialState = {
  count: 0
};

function rootReducer(state = initialState, action) {
  switch (action.type) {
    case 'INCREMENT':
      return { ...state, count: state.count + 1 };
    case 'DECREMENT':
      return { ...state, count: state.count - 1 };
    default:
      return state;
  }
}

export default rootReducer;

create app.js


import React from 'react';
import { connect } from 'react-redux';
import { increment, decrement } from './actions';

function App(props) {
  const { count, increment, decrement } = props;

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increment}>Increment</button>
      <button onClick={decrement}>Decrement</button>
    </div>
  );
}

const mapStateToProps = state => ({
  count: state.count
});

const mapDispatchToProps = dispatch => ({
  increment: () => dispatch(increment()),
  decrement: () => dispatch(decrement())
});

export default connect(mapStateToProps, mapDispatchToProps)(App);

Provider is a component provided by the react-redux library that allows you to provide the Redux store to all components in the component tree. It is used to wrap the root component of your application, 
so that all child components can access the store's state and dispatch actions to update the state.
