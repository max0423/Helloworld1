

GraphQL was developed to cope with the need for more flexibility and efficiency! 
It solves many of the shortcomings and inefficiencies that developers experience when interacting with REST APIs.
Overfetching means that a client downloads more information than is actually required in the app Underfetching generally
means that a specific endpoint doesnâ€™t provide enough of the required information. 
The client will have to make additional requests to fetch everything it needs. 
GraphQL uses a strong type system to define the capabilities of an API. 
All the types that are exposed in an API are written down in a schema using the GraphQL Schema Definition Language (SDL). 
This schema serves as the contract between the client and the server to define how a client can 
access the data.
